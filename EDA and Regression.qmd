### EDA

```{r load-libraries}
library(tidyverse)
library(tidymodels)
library(zoo)
library(knitr)
```

```{r load-data}
loans = read.csv("loans_full_schema.csv")
```

```{r data-cleaning}
# Set variable types
loans <- loans |> 
  mutate(state = factor(state),
         homeownership = factor(homeownership),
         verified_income = factor(verified_income),
         loan_purpose = factor(loan_purpose),
         application_type = factor(application_type),
         grade = factor(grade),
         sub_grade = factor(sub_grade),
         issue_month = as.yearmon(issue_month, format = "%b-%Y"),
         loan_status = factor(loan_status),
         initial_listing_status = factor(initial_listing_status),
         disbursement_method = factor(disbursement_method))
```

```{r debt-income-interest-rate}
ggplot(loans, aes(x = debt_to_income, y = interest_rate, color = grade)) +
  geom_point() +
  labs(x = "Debt to Income Ratio",
       y = "Loan Interest Rate (%)",
       title = "Loan Interest Rate vs. Loanee Debt to Income Ratio",
       subtitle = "By Loan Grade")
```

```{r loan-grade-purposes}
ggplot(loans, aes(x = grade, fill = loan_purpose)) +
  geom_bar(position = "fill") +
  labs(x = "Loan Grade",
       y = "Proportion",
       title = "Distribution of Loan Purposes",
       subtitle = "by Loan Grade")
```

```{r interest-rates-by-grade}
ggplot(loans, aes(x = interest_rate)) +
  geom_histogram(fill = "blue", color = "black") +
  facet_wrap(~ grade, scales = "free_y") +  # Separate panel for each level of A
  labs(title = "Distribution of Loan Interest Rates by Loan Grade", x = "Interest Rate (%)", y = "Count") +
  theme_minimal()
```

```{r warning=FALSE}
ggplot(loans, aes(x=annual_income/1000, y=interest_rate, 
                  color=verified_income)) + 
  geom_point() + 
  geom_smooth(method = "lm", se=FALSE) + 
  labs(title="Interest Rate vs Annual Income by Income Verification",
       x="Annual Income (in $1000s)", 
       y="Interest Rate (%)",
       color="Income Verification") + 
  scale_y_continuous(limits = c(5, 30), breaks = seq(5, 30, by = 5)) + 
  theme_minimal()
```

```{r warning=FALSE}
ggplot(loans, aes(x=issue_month)) +
  geom_histogram(stat="count", bins=3, fill="darkblue") + 
  geom_text(stat = "count", aes(label = after_stat(count)), 
            vjust = -0.5, color = "black", size = 4) +
  labs(title="Distribution of Loans by Issue Month",
       x="Issue Month",
       y="Count") + 
  theme_minimal()
```

### Multivariate Linear Regression

```{r regression-model}
lend_model = lm(interest_rate ~ debt_to_income + loan_amount + term + grade + 
                  num_satisfactory_accounts + account_never_delinq_percent +
                  public_record_bankrupt, data = loans)

model_output = tidy(lend_model) 

for(i in 1:nrow(model_output)) {
  if(as.numeric(model_output$p.value[i]) < 0.001) {
    model_output$p.value[i] = "< 0.001"
  } else {
    model_output$p.value[i] = round(as.numeric(model_output$p.value[i]), 3)
  } 
}

# customize variables so that there are no raw variable outputs
# model_output <- as.data.frame(model_output)
# 
# row_names = c("")
# 
# rownames(model_output) <- row_names
# 
# model_output <- model_output |> 
#   select(-term)

model_output |>
  kable(
    col.names = c("Term", "Estimate", "Standard Error", "Statistic", "P-value"),
    digits = 3)
```

```{r assess-model-performance}
glance(lend_model)$r.squared
glance(lend_model)$adj.r.squared
```
